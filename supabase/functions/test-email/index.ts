
import { serve } from "https://deno.land/std@0.190.0/http/server.ts";

const corsHeaders = {
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Headers": "authorization, x-client-info, apikey, content-type",
};

interface TestEmailRequest {
  email: string;
}

const handler = async (req: Request): Promise<Response> => {
  console.log("üîß D√©but du test d'envoi d'email via SMTP");
  
  if (req.method === "OPTIONS") {
    console.log("‚úÖ Requ√™te OPTIONS trait√©e");
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { email } = await req.json() as TestEmailRequest;
    console.log("üìß Email de test pour:", email);
    
    // R√©cup√©ration de la cl√© API Brevo (mot de passe SMTP)
    const brevoApiKey = Deno.env.get("BREVO_API_KEY");
    console.log("üîë Cl√© API Brevo:", brevoApiKey ? "PR√âSENTE" : "MANQUANTE");
    
    if (!brevoApiKey) {
      throw new Error("Cl√© API Brevo manquante dans les variables d'environnement");
    }
    
    console.log("üåê Tentative d'envoi via l'API Brevo...");
    
    // Utilisation de l'API Brevo au lieu de SMTP pour √©viter les probl√®mes de d√©pendances
    const response = await fetch("https://api.brevo.com/v3/smtp/email", {
      method: "POST",
      headers: {
        "accept": "application/json",
        "api-key": brevoApiKey,
        "content-type": "application/json"
      },
      body: JSON.stringify({
        sender: {
          name: "SushiEats",
          email: "clweb@hotmail.com"
        },
        to: [
          {
            email: email,
            name: "Destinataire"
          }
        ],
        subject: "üç£ Test Brevo API - SushiEats",
        htmlContent: `
          <html>
            <body style="font-family: Arial, sans-serif; padding: 20px; background-color: #f9f9f9;">
              <div style="max-width: 600px; margin: 0 auto; background-color: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
                <h2 style="color: #2c3e50; text-align: center;">üç£ Test Brevo API r√©ussi !</h2>
                <p style="font-size: 16px; line-height: 1.6;">F√©licitations ! Cet email de test a √©t√© envoy√© avec succ√®s via l'API Brevo depuis votre syst√®me SushiEats.</p>
                
                <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin: 20px 0;">
                  <p><strong>üìÖ Timestamp:</strong> ${new Date().toISOString()}</p>
                  <p><strong>üåê M√©thode:</strong> API Brevo</p>
                  <p><strong>üîß Endpoint:</strong> https://api.brevo.com/v3/smtp/email</p>
                  <p><strong>üë§ Exp√©diteur:</strong> clweb@hotmail.com</p>
                  <p><strong>üìß Destinataire:</strong> ${email}</p>
                </div>
                
                <p style="color: #27ae60; font-weight: bold; text-align: center;">
                  ‚úÖ Si vous recevez cet email, la configuration Brevo fonctionne parfaitement !
                </p>
                
                <hr style="margin: 30px 0; border: none; border-top: 1px solid #eee;">
                
                <p style="font-size: 14px; color: #666; text-align: center;">
                  Cet email a √©t√© envoy√© automatiquement par votre syst√®me de test SushiEats via l'API Brevo.<br>
                  Ne pas r√©pondre √† cet email.
                </p>
              </div>
            </body>
          </html>
        `
      })
    });
    
    console.log("üìß Statut de la r√©ponse Brevo:", response.status);
    
    if (!response.ok) {
      const errorText = await response.text();
      console.error("‚ùå Erreur API Brevo:", errorText);
      throw new Error(`Erreur API Brevo: ${response.status} - ${errorText}`);
    }
    
    const result = await response.json();
    console.log("‚úÖ Email envoy√© avec succ√®s via l'API Brevo:", result);
    
    return new Response(JSON.stringify({ 
      success: true, 
      message: "Email de test envoy√© avec succ√®s via l'API Brevo !",
      method: "API Brevo",
      messageId: result.messageId,
      deliveryTips: [
        "V√©rifiez votre dossier Spam/Ind√©sirables",
        "V√©rifiez le dossier Promotions (Gmail)",
        "L'email peut prendre quelques minutes √† arriver",
        "L'API Brevo offre une excellente d√©livrabilit√©",
        "Ajoutez clweb@hotmail.com √† vos contacts"
      ],
      debugInfo: {
        hasApiKey: !!brevoApiKey,
        timestamp: new Date().toISOString(),
        senderEmail: "clweb@hotmail.com",
        apiEndpoint: "https://api.brevo.com/v3/smtp/email",
        messageId: result.messageId
      }
    }), {
      headers: { ...corsHeaders, "Content-Type": "application/json" },
    });
    
  } catch (error: any) {
    console.error("üí• Erreur dans test-email:", error);
    console.error("üí• Stack trace:", error.stack);
    
    let errorMessage = error.message;
    let suggestions = [
      "V√©rifiez votre cl√© API Brevo",
      "V√©rifiez que la cl√© API est active",
      "V√©rifiez que l'exp√©diteur clweb@hotmail.com est autoris√©"
    ];
    
    // Messages d'erreur sp√©cifiques selon le type d'erreur
    if (error.message.includes("401") || error.message.includes("Unauthorized")) {
      suggestions = [
        "Erreur d'authentification - V√©rifiez votre cl√© API Brevo",
        "Assurez-vous que la cl√© API est correcte et active",
        "V√©rifiez que vous avez les permissions d'envoi d'emails"
      ];
    } else if (error.message.includes("400") || error.message.includes("Bad Request")) {
      suggestions = [
        "Erreur dans la requ√™te - V√©rifiez l'adresse email",
        "Assurez-vous que l'exp√©diteur clweb@hotmail.com est v√©rifi√©",
        "V√©rifiez que le domaine est autoris√© dans Brevo"
      ];
    }
    
    return new Response(JSON.stringify({ 
      success: false,
      error: errorMessage,
      method: "API Brevo",
      stack: error.stack,
      suggestions: suggestions,
      debugInfo: {
        timestamp: new Date().toISOString(),
        hasApiKey: !!Deno.env.get("BREVO_API_KEY"),
        apiEndpoint: "https://api.brevo.com/v3/smtp/email",
        senderEmail: "clweb@hotmail.com"
      }
    }), {
      status: 500,
      headers: { ...corsHeaders, "Content-Type": "application/json" },
    });
  }
};

serve(handler);
